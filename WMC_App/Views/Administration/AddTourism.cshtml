@model WMC_App.Models.DAL.tbl_TourismMasterss
@{
    ViewBag.Title = "EditUserDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .wp {
        text-decoration: underline;
        font-weight: bold;
    }
</style>
<div id="content-wrapper">
    <div class="row" style="opacity: 1;">
        <div class="col-lg-12">
            <div class="slide-main-container">
                <!-- ngView:  --><div ng-view="" autoscroll="true" class="slide-main-animation ng-scope">
                    <div class="row ng-scope">
                        <div class="col-lg-12">
                            <ol class="breadcrumb">
                                <li><a href="/Home/Index">Home</a></li>
                                <li><span>New Tourism</span></li>
                            </ol>
                            <h1>Tourism Registration</h1>
                        </div>
                    </div>
                    @using (Html.BeginForm("AddTourism", "Administration", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
                    {
                        <div class="row ng-scope">
                            <div class="col-lg-12">
                                <div class="main-box">
                                    <header class="main-box-header clearfix" style="border-bottom: 1px solid #E7EBEE;">
                                        <h2 class="wp">Tourism Registeration</h2>
                                    </header>
                                    <div class="main-box-body clearfix">
                                        @Html.ValidationSummary()
                                        @Html.HiddenFor(x => x.pkid)
                                     @Html.HiddenFor(x=>x.Lid)
                                        <div class="form-group row">
                                            <label class="col-lg-2 col-form-label text-right">Place Name</label>
                                            <div class="col-lg-4">
                                                @Html.TextBoxFor(x => x.Name, new { @class = "form-control Rajstring", @placeholder = "Enter Place Name", @required = "required" })
                                            </div>
                                            <label class="col-lg-2 col-form-label text-right">Sub Category</label>
                                            <div class="col-lg-4">
                                                @Html.DropDownListFor(m => m.Sub_fkid, (IEnumerable<SelectListItem>)@ViewBag.subList, "Select Subcategory", new { @class = "form-control" })
                                            </div>
                                        </div>

                                        <div class="form-group row">                                           
                                            <label class="col-lg-2 col-form-label text-right">City</label>
                                            <div class="col-lg-4">
                                                @Html.DropDownListFor(m => m.city_fkid, (IEnumerable<SelectListItem>)@ViewBag.cityList, "Select City", new { @class = "form-control" })
                                            </div>
                                            <label class="col-lg-2 col-form-label text-right">Incharge Name</label>
                                            <div class="col-lg-4">
                                                @Html.TextBoxFor(x => x.InchargeName, new { @class = "form-control", @placeholder = "Enter Incharge Number" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-lg-2 col-form-label text-right">Address</label>
                                            <div class="col-lg-4">
                                                @Html.TextAreaFor(x => x.Address, new { @class = "form-control", @placeholder = "Enter Address" })
                                            </div>
                                            <label class="col-lg-2 col-form-label text-right">Description</label>
                                            <div class="col-lg-4">
                                                @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Enter Description" })
                                            </div>                                           
                                        </div>

                                        <div class="form-group row">                                           
                                            <label class="col-lg-2 col-form-label text-right">Contact Number</label>
                                            <div class="col-lg-4">
                                                @Html.TextBoxFor(x => x.ContactNumber, new { @class = "form-control Rajnumber", @placeholder = "Enter Contact Number" })
                                            </div>
                                            <label class="col-lg-2 col-form-label text-right">Added Date</label>
                                            <div class="col-lg-4">
                                                @Html.TextBoxFor(x => x.AddedDate, new { @class = "form-control", @required = "required" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-lg-2 col-form-label text-right">Opening Time</label>
                                            <div class="col-lg-4">
                                                @Html.TextBoxFor(x => x.openingTime, new { @class = "form-control"})
                                            </div>
                                            <label class="col-lg-2 col-form-label text-right">Closing TIme</label>
                                            <div class="col-lg-4">
                                                @Html.TextBoxFor(x => x.ClosingTime, new { @class = "form-control"})
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-lg-2 col-form-label text-right">Select Files</label>
                                            <div class="col-lg-4">                                             
                                                <input type="file" name="files" multiple="multiple"/>                                                
                                            </div>                                          
                                        </div>
                                                                             
                                        <div class="form-group">
                                            <div class="col-lg-offset-2 col-lg-10">
                                                <button type="submit" class="btn btn-success">Save</button>
                                                <button type="button" class="btn btn-danger">Cancel</button>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="main-box-body clearfix">
                                        <table class="table table-bordered table-striped table-hover js-basic-example dataTable " style="width: 100%;">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        #
                                                    </th>
                                                    <th>Place Name</th>
                                                    <th>SubCategory</th>
                                                    <th>Description</th>
                                                    <th>Add Date</th>
                                                    <th>ContactNumber</th>
                                                    <th style="width:10% !important;">Action</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Content/js/jquery-1.12.4.js"></script>
<link href="~/Content/css/sweetalert2.css" rel="stylesheet" />
<script src="~/Content/js/sweetalert2.js"></script>
<link href="~/Content/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="~/Content/js/jquery.dataTables.js"></script>
<script src="~/Content/js/common.js"></script>

<script type="text/javascript">
    $('.js-basic-example').DataTable({
        "processing": true, // for show progress bar
        "serverSide": true, // for process server side
        "filter": true, // this is for disable filter (search box)
        "orderMulti": true, // for disable multiple column at once

        "ajax": {
            "url": "/Administration/GetTourismList",
            "type": "POST",
            "datatype": "json"
        },
        "columns": [
                { "data": "pkid", "name": "pkid", "orderable": false, "autoWidth": true },
                { "data": "comname", "Name": "comname", "autoWidth": true },
                { "data": "des", "Name": "des", "autoWidth": true },
                { "data": "catg", "Name": "catg", "autoWidth": true },
                 {
                     "data": "adddate", "Name": "adddate", "render": function (data, type, full, meta) {
                         return '' + formatJsonDate(data) + ''
                     }
                 },
                {
                    "data": "active", "Name": "active", "autoWidth": true
                },

                {
                    "data": "pkid", "orderable": false, "render": function (data, type, full, meta) {
                        return '<a href=/Administration/Addcomplaint?id=' + data + '>Edit</a> | <a href="#" id=' + data + ' onclick="DeleteRequest(this)">Delete</a>';
                    }
                }
        ],
        "fnRowCallback": function (nRow, aData, iDisplayIndex) {
            $("td:first", nRow).html(iDisplayIndex + 1);
            return nRow;
        }
    })
    function Checktrue(cname) {
        debugger;
        if (cname == null || cname == "") {
            return false;
        }
        else {
            if (cname == "1") {
                return true
            }
            else {
                return false;
            }
        }
    }
    function DeleteRequest(cname) {
        debugger;
        swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            confirmButtonClass: 'btn btn-success',
            cancelButtonClass: 'btn btn-danger',
            buttonsStyling: true
        }).then(function () {
            var id = cname.id;
            $.get("/Administration/DeleteTourism?id=" + id + "", function (data) {
                debugger;
                if (data == "success") {
                    swal(
                  'Deleted!',
                  'Your User has been deleted.',
                  'success'
                )
                }
                else {
                    swal(
                  'Oopss...',
                  'Something Went wrong...!',
                  'error'
                )
                }
            }).done(function () {
                    window.location.reload(1);
            })
        },
    function (dismiss) {
        // dismiss can be 'cancel', 'overlay',
        // 'close', and 'timer'
        if (dismiss === 'cancel') {
            swal(
              'Cancelled',
              'Your imaginary file is safe :)',
              'error'
            )
        }
    })
    }
    $(document).ready(function () {
        $("Select").select();
        $('#AddedDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true
        });
        $('#openingTime').val('@DateTime.Now.ToLongTimeString()')
        $('#ClosingTime').val('@DateTime.Now.ToLongTimeString()')
        $('#AddedDate').val('@DateTime.Now.ToShortDateString()')
        if ('@ViewBag.Exception' != "") {
            sweetAlert('Oops...',
                 'Something went wrong due to @ViewBag.Exception!',
                 'error'
                )
        }

    })
</script>

