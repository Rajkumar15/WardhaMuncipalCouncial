@model WMC_App.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<style type="text/css">
    .wp {
        text-decoration: underline;
        font-weight: bold;
    }

    ul > li {
        color: red !important;
    }
</style>
<div id="content-wrapper">
    <div class="row" style="opacity: 1;">
        <div class="col-lg-12">
            <div class="slide-main-container">
                <!-- ngView:  --><div ng-view="" autoscroll="true" class="slide-main-animation ng-scope">
                    <div class="row ng-scope">
                        <div class="col-lg-12">
                            <ol class="breadcrumb">
                                <li><a href="/Home/Index">Home</a></li>
                                <li><span>User Master</span></li>
                                <li class="active"><span>Create User</span></li>
                            </ol>
                            <h1>Create User</h1>
                        </div>
                    </div>
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal ng-pristine ng-valid", role = "form" }))
                    {
                        <div class="row ng-scope">
                            <div class="col-lg-12">
                                <div class="main-box">
                                    <header class="main-box-header clearfix" style="border-bottom: 1px solid #E7EBEE;">
                                        <h2 class="wp">User Registeration</h2>
                                    </header>
                                    <div class="main-box-body clearfix">
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary()

                                        <div class="form-group">
                                            <label for="inputEmail1" class="col-lg-2 control-label">Full Name</label>
                                            <div class="col-lg-6">
                                                @Html.TextBoxFor(x => x.FullName, new { @class = "form-control Rajstring", placeholder = "Enter your Name", @required = "required" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label for="inputEmail1" class="col-lg-2 control-label">Email Id</label>
                                            <div class="col-lg-6">
                                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Enter your Email" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label for="inputEmail1" class="col-lg-2 control-label">Mobile Number</label>
                                            <div class="col-lg-6">
                                                @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-control Rajnumber", placeholder = "Enter Mobile Number" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label for="inputEmail1" class="col-lg-2 control-label">Password</label>
                                            <div class="col-lg-6">
                                                @Html.PasswordFor(x => x.Password, new { @class = "form-control", placeholder = "Password", @required = "required" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label for="inputEmail1" class="col-lg-2 control-label">Confirm Password</label>
                                            <div class="col-lg-6">
                                                @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password", @required = "required" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label for="inputEmail1" class="col-lg-2 control-label">Select Role</label>
                                            <div class="col-lg-6">
                                                @Html.DropDownListFor(m => m.UserRoles, (IEnumerable<SelectListItem>)@ViewBag.rolelist, new { @class = "form-control" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-lg-offset-2 col-lg-10">
                                                <button type="submit" class="btn btn-success">Save</button>
                                                <button type="button" class="btn btn-danger">Cancel</button>
                                            </div>
                                        </div>

                                    </div>

                                    @*<header class="main-box-header clearfix">
                                            <h2>User Table</h2>
                                        </header>*@
                                    <div class="main-box-body clearfix">
                                        <table class="table table-bordered table-striped table-hover js-basic-example dataTable " style="width: 100%;">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        #
                                                    </th>
                                                    <th>Full Name</th>
                                                    <th>User Name</th>
                                                    <th>Role Name</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Content/js/jquery-1.12.4.js"></script>
<link href="~/Content/css/sweetalert2.css" rel="stylesheet" />
<script src="~/Content/js/sweetalert2.js"></script>
<link href="~/Content/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="~/Content/js/jquery.dataTables.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        if ('@ViewBag.Exception' != "") {
            sweetAlert('Oops...',
                 'Something went wrong due to @ViewBag.Exception!',
                 'error'
                )
        }
        var uunn = '@ViewBag.name';
        if (uunn != "") {
            $("#Email").val(uunn);
            $("#Email").attr("readonly", true);
        }
    
    })
    $('.js-basic-example').DataTable({
        "processing": true, // for show progress bar
        "serverSide": true, // for process server side
        "filter": false, // this is for disable filter (search box)
        "orderMulti": false, // for disable multiple column at once

        "ajax": {
            "url": "/SuperAdmin/GetUserList",
            "type": "POST",
            "datatype": "json"
        },
        "columns": [
                { "data": "pkid", "name": "pkid", "orderable": false, "autoWidth": true },
                { "data": "fullname", "Name": "fullname", "autoWidth": true },
                { "data": "un", "Name": "un", "autoWidth": true },
                { "data": "role", "Name": "role", "autoWidth": true },
                {
                    "data": "pkid", "orderable": false, "render": function (data, type, full, meta) {
                        return '<a href=/SuperAdmin/EditUserDetails?id=' + data + '>Edit</a> | <a href="#" data-Id=' + full.userid + ' onclick="DeleteCategory(this)"  ">Delete</a>';
                    }
                }
        ],
        "fnRowCallback": function (nRow, aData, iDisplayIndex) {
            $("td:first", nRow).html(iDisplayIndex + 1);
            return nRow;
        }
    })

    //function DeleteCategory(cname) {
    //    swal({
    //        title: 'Are you sure?',
    //        text: "You won't be able to revert this!",
    //        type: 'warning',
    //        showCancelButton: true,
    //        confirmButtonColor: '#3085d6',
    //        cancelButtonColor: '#d33',
    //        confirmButtonText: 'Yes, delete it!',
    //        cancelButtonText: 'No, cancel!',
    //        confirmButtonClass: 'btn btn-success',
    //        cancelButtonClass: 'btn btn-danger',
    //        buttonsStyling: true
    //    }).then(function () {
    //        var id = $(cname).attr("data-Id");
    //        $.get("/Account/Deleteuser?id=" + id + "", function (data) {
    //            debugger;
    //            if (data == "success") {
    //                swal(
    //              'Deleted!',
    //              'Your User has been deleted.',
    //              'success'
    //            )
    //            }
    //            else {
    //                swal(
    //              'Oopss...',
    //              'Something Went wrong...!',
    //              'error'
    //            )
    //            }
    //        }).done(function () {
    //            setTimeout(function () {
    //                window.location.reload(1);
    //            }, 5000);
    //        })
    //    },
    //    function (dismiss) {
    //        // dismiss can be 'cancel', 'overlay',
    //        // 'close', and 'timer'
    //        if (dismiss === 'cancel') {
    //            swal(
    //              'Cancelled',
    //              'Your imaginary file is safe :)',
    //              'error'
    //            )
    //        }
    //    })
    //}

</script>